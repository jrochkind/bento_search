language: ruby
bundler_args: --without manual_development
matrix:
  # sqlite3 and jruby are not happy in rails 5.0 and 5.1, so we don't
  # bother testing there. happy again in rails 5.2.
  include:
    - rvm: 1.9.3
      env: RAILS_VERSION_SPEC=4.2.0
    - rvm: 2.2.7
      env: RAILS_VERSION_SPEC=4.2.0
    - rvm: 2.3.4
      env: RAILS_VERSION_SPEC=4.2.0
    - rvm: 2.2.7
      env: RAILS_VERSION_SPEC=5.0.0
    - rvm: 2.3.4
      env: RAILS_VERSION_SPEC=5.0.0
    - rvm: 2.4.1
      env: RAILS_VERSION_SPEC=5.0.0
    - rvm: 2.5.1
      env: RAILS_VERSION_SPEC=5.1.0
    - rvm: 2.5.1
      env: RAILS_VERSION_SPEC=5.2.0
    - rvm: jruby-19mode
      env: RAILS_VERSION_SPEC=4.2.0
    - rvm: jruby-9.2.0.0
      env: RAILS_VERSION_SPEC=5.2.0

env:
  global:
    - NOKOGIRI_USE_SYSTEM_LIBRARIES=true

# uncomment this line if your project needs to run something other than `rake`:
# script: bundle exec rspec spec
before_install:
  # Bundler 1.13 seems to not work with jruby 1.7 and rails4 for
  # some reasons I can't figure out. jruby 1.7 is old, but we want
  # to keep testing with it until a major version release.
  - if [[ `ruby -v` == jruby\ 1.7* ]]; then gem install bundler -v 1.12.5; else gem install bundler; fi
# use new faster travis infrastructure
sudo: false
# which let's us do caching
cache: bundler
